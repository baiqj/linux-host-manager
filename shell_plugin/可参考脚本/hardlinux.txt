

应该禁止所有默认的被操作系统本身启动的并且不必要的账号，当你第一次安装系统时就应该这么做，Linux提供了很多默认账号，而账号越多，系统就越容易受到攻击。
#############################################

Suid及sgid文件检查： 
执行如下命令： 
find / -user root -perm -4000 -print -exec md5sum {} \; 
find / -user root -perm -2000 -print -exec md5sum {} \; 
将结果重定向到一个文件，保存起来以后备查。  
###########################################
6.  防范SYN攻击： 
1）使用SYN Cookies，在/etc/rc.d/rc.local里加入： 
   echo 1 >; /proc/sys/net/ipv4/tcp_syncookies 
2）增加TCP最大半连接数： 
   sysctl -w net.ipv4.tcp_max_syn_backlog="2048" 
3）缩短TCP半连接的等待超时时间 
    sysctl -w net.ipv4.tcp_synack_retries=1

   这些措施只能减缓SYN攻击，并不能真正解决SYN攻击问题。最好的方法还是使用硬件防火墙。
######################################
可以通过chattr命令来修改文件的这些属性，如果要查看其属性值的话可以使用ls
attr命令


保护log文件当与log文件和log备份一起使用时不可变和只添加这两种文件属性特
别有用。系统管理员应该将活动的log文件属性设置为只添加。当log被更新时，新产生
的log备份文件属性应该设置成不可变的，而新的活动的log文件属性又变成了只添加。
这通常需要在log更新脚本中添加一些控制命令。

StackGuardStackGuard是一个十分强大的安全补丁工具

Abacus Port SentryAbacus Port Sentry是开放源代码的工具包，它能够监视网
络接口并且与防火墙交互操作来关闭端口扫瞄攻击。当发生正在进行的端口扫瞄时，Ab
acus Sentry可以迅速阻止它继续执行。但是如果配置不当，它也可能允许敌意的外部者
在你的系统中安装拒绝服务攻击。


现在最常用的用于取代syslog的安全
log服务器称为"安全syslog（ssyslong）"，用户可以从Core SDI站点http://www.core
-sdi.com/ssylog处下载这个工具。这个守护程序实现一个称为PEQ-1的密码协议来实现
对系统日志的远程审计。即使在入侵者获得系统超级用户权限的情况下也仍然可以进行
审计，因为协议保证了以前以及入侵过程中的的log信息没有审计者（在远程可信任的主
机上）的通知无法被修改。


#########################################

#####################################################
4.口令文件

chattr命令给下面的文件加上不可更改属性，从而防止非授权用户获得权限。

# chattr +i /etc/passwd

# chattr +i /etc/shadow

# chattr +i /etc/group

# chattr +i /etc/gshadow
##################################
6.限制su命令

如果你不想任何人能够用su作为root，可以编辑/etc/pam.d/su文件，增加如下两行：

auth sufficient /lib/security/pam_rootok.so debug

auth required /lib/security/pam_wheel.so group=isd

　　这时，仅isd组的用户可以用su作为root.此后，如果你希望用户admin能够用su作为root，可以运行如下命令：

# usermod -G10 admin
################################

7.删减登录信息

　　默认情况下，登录提示信息包括Linux发行版、内核版本名和服务器主机名等。对于一台安全性要求较高的机器来说这样泄漏了过多的信息。可以编辑/etc/rc.d/rc.local将输出系统信息的如下行注释掉。

# This will overwrite /etc/issue at every boot. So，make any changes you

# want to make to /etc/issue here or you will lose them when you reboot

# echo ""＞/etc/issue

# echo ""＞＞/etc/issue

# echo "Kernel 100 100uname -r） on 100 100uname -m）"＞＞/etc/issue

# cp -f /etc/issue /etc/issue.net

# echo＞＞/etc/issue

然后，进行如下操作：

# rm -f /etc/issue

# rm -f /etc/issue.net

# touch /etc/issue

# touch /etc/issue.net

######################################
2.防止IP欺骗

编辑host.conf文件并增加如下几行来防止IP欺骗攻击。

order bind，hosts

multi off

nospoof on

3.防止DoS攻击

　　对系统所有的用户设置资源限制可以防止DoS类型攻击。如最大进程数和内存使用数量等。例如，可以在/etc/security/limits.conf中添加如下几行：

* hard core 0

* hard rss 5000

* hard nproc 20

然后必须编辑/etc/pam.d/login文件检查下面一行是否存在。

session required /lib/security/pam_limits.so

上面的命令禁止调试文件，限制进程数为50并且限制内存使用为5MB.
###############################################
４．Files检查 

# find / -uid 0 –perm -4000 –print 

# find / -size +10000k –print 

# find / -name “...“ –print 

# find / -name “.. “ –print 

# find / -name “. “ –print 

# find / -name “ “ –print 


注意SUID文件，可疑大于１０Ｍ，．．．，．．，．和空格文件 
##########################################

§关于TCP_WRAPPERS： 
 
　默认的，Redhat Linux允许所有的请求，这是很危险的。如果用TCP_WRAPPERS来增强我们站点的安全性简直是举手之劳，你可以将禁

止所有的请求放入“ALL: ALL”到/etc/hosts.deny中，然后放那些明确允许的请求到/etc/hosts.allow中，如: 
 
　sshd: 192.168.1.10/255.255.255.0 gate.openarch.com 
 
　对IP地址192.168.1.10和主机名gate.openarch.com，允许通过ssh连接。配置完了之后，用tcpdchk检查，你可以直接执行：tcpdchk 

。在这里，tcpchk是TCP_Wrapper配置检查工具，它检查你的tcp wrapper配置并报告所有发现的潜在/存在的问题。 
 

############################
# netstat –nap 

察看不正常打开的TCP/UDP端口，嘿嘿，需要平时注意，比较，好像我没这样用心过：） 


# arp –a 
##########################
查找是否有后门 
cat /etc/crontab 
ls /var/spool/cron/ 
cat /etc/rc.d/rc.local 
ls /etc/rc.d 
ls /etc/rc3.d 
find / -type f -perm 4000

suneagle# grep -v "#" /etc/inetd.conf 
这个命令可以帮你查出有没有后门，呵呵。 

##################################
系统管理员要保护好/etc/passwd和/etc/shadow这两个文件的安全，不让无关的人员获得这两个文件，这样黑客利用John等程序对/etc/passwd和/etc/shadow文件进行了字典攻击获取用户口令的企图就无法进行。系统管理员要定期用John等程序对本系统的/etc/passwd和/etc/shadow文件进行模拟字典攻击，一旦发现有不安全的用户口令，要强制用户立即修改。 
####################################
制定适当的数据备份计划确保系统万无一失 

这些CGI脚本是可执行程序，一般存放在Web服务器的CGI-BIN目录下面，在配置Web服务器时，要保证CGI可执行脚本只存放于CGI-BIN目录中，这样可以保证脚本的安全，且不会影响到其他目录的安全。 
################################
最好禁止提供finger服务，即从/usr/bin下删除finger 命令。如果要保留 finger服务，应将finger文件换名，或修改权限为只允许root用户执行finger命令。 
###############3#################################
suneagle# grep -v "#" /etc/inetd.conf 
这个命令可以帮你查出有没有后门，呵呵。 
###############################################
编辑/etc/groups，增加wheel组（其实我很喜欢freebsd的地方，就是默认freebsd这些工作做的很好）。这个组包含了一些用户，可以执行/bin/su等强大的命令。对其他用户执行这些命令的控制，可以改善系统的安全。如下命令： 
suneagle# /bin/chgrp wheel /bin/su 
suneagle# /bin/chmod 4750 /bin/su 
然后锁定一些文件：.rhosts,.netrc,/etc/hosts.equiv。r命令可以通过这些文件远程连入你的系统。先touch这些文件，然后chmod至0。 
suneagle# /bin/touch /root/.rhosts /root/.netrc /etc/hosts.equiv;/bin/chmod 0 /root/.rhosts /root/.netrc /etc/hosts.equiv 
linux还有一个众所周知的命令：chattr，呵呵+i操作，即使是root，也在-i之前改不了它们，先在你的系统的/etc/shadow,/etc/inetd.conf等文件来个chattr +i可以避免一下exploit给你添后门什么的，
#############################################


一个强大的弱点数据库是由Internet Security System Inc. 维护的。可以在下面的站点搜索ISS的X-force数据库。
BlackICE

　　http://www.iss.net/cgi-bin/xforce/xforce_index.pl
######################################
安装完服务器之后必须卸载的软件 
　　RedHat Linux在默认情况下会安装一些预置的软件，而且在安装的过程中，不能够选择不安装。因此，必须在安装完成之后卸载下面这些软件： 
　　
　　pump 
　　apmd 
　　isapnptools 
　　redhat-logos 
　　mt-st 
　　kernel-pcmcia-cs 
　　setserial 
　　redhat-release 
　　eject 
　　linuxconf 
　　kudzu 
　　gd 
　　Bc 
　　getty_ps 
　　raidtools 
　　pciutils 
　　mailcap 
　　setconsole 
　　gnupg
##########################
第一步 
　　
　　卸载这些软件包。 
　　[root@deep]# rpm -e pump mt-st eject bc mailcap apmd kernel-pcmcia-cs linuxconf getty_ps setconsole isapnptools setserial kudzu raidtools gnupg redhat-logos redhat-release gd pciutils 
　　
　　第二步 
　　
　　手工删除linux.conf-installed文件。 
　　[root@deep]# rm -f /etc/conf.linuxconf-installed 
　　注意：这是和linuxconf程序相关的的配置文件，必须手工删除。 
　　
　　如果你有IDE硬盘，hdparm程序是必须要的，所以一定要保留下来。否则，你可以把它从硬盘中卸载掉。 
　　
　　kdbconfig、mouseconfig和timeconfig是用来设置键盘类型、鼠标类型和时区的。在这些都设置好之后，就很少有机会再用到它们了。所以，可以把它们卸载掉。等需要改变键盘、鼠标和时区的时候，可以再从CD-ROM用rpm命令安装。 
　　
　　sendmail、procmail和mailx在通常情况下是必须要的。因为服务器上运行的各种各样的服务会用这些程序发消息给root用户，以建立系统日志（syslog）。 
　　
　　sendmail是一个强大的邮件传送代理（Mail Transport Agent，简称MTA），可以把邮件从一台计算机发送到另一台计算机。它实际上所起的作用就是通过网络或Internet把email传送到email的目的地。sendmail有很多不同的配置方式：可以做为一个把邮件转给邮件集中服务器（Mail Hub Server）的内部邮件服务器，也可以做为单独的mail服务器，或者做为网络上所有sendmail服务器的中央邮件集中服务器（Central Mail Hub Server）。因此，可以根据需要配置不同的sendmail服务器。所以，你要先把sendmail卸载掉，参考本书sendmail的配置和安装的相关章节，根据需要建立自己的sendmail服务器。 
　　
　　sendmail并不是自己处理邮件的分发，它是通过运行其它程序来完成这项工作。procmail是RedHat Linux用于本地邮件分发的分发代理（delivery agent）。因此，procmail只要装在中央邮件集中服务器（Central Mail Hub Server）上就行了。所以，没有必要在内部所有运行sendmail服务的计算机上都安装procmail程序。因为，这些内部的计算机会通过“/bin/mail”或sendmail把邮件转发到中央邮件集中服务器上。 
　　
　　Pump DHCP（Dynamic Host Configuration Protocol）和BOOTP（Boot Protocol）协议允许在IP网络上的设备，从服务器上获取它们的网络配置信息（IP地址、子网掩码、广播地址，等等）。【没有必要】 
　　
　　mt-st软件包包括mt和st磁带机驱动管理程序。mt（用于磁性磁带驱动器（magnetic tape drivers））和st（用于SCSI磁带驱动器）可以控制磁带的回卷、弹出、跳过文件或块以及其它。【没有必要】 
　　
　　eject程序允许用户用软件弹出可移动的介质，如：CD-ROM、软盘以及Jaz或Zip盘。【没有必要】 
　　
　　bc软件包包括：bc和dc两个应用程序，bc是一种非常精确的用于处理算术运算的语言。dc是基于堆栈的交互式计算器，是用在文本模式下的。【没有必要】 
　　
　　mailcap文件是用于metamail程序的。metamail通过读mailcap文件来确定怎么显示非文本的和多媒体的邮件信息。【没有必要】 
　　
　　apmd是高级能源管理（Advanced Power Management）daemon和实用工具。它可以监控笔记本电脑的电池使用情况。当电池电压过低的时候，它会给出警告。【没有必要】 
　　
　　所有支持PCMCIA的笔记本电脑都要用到kernel-pcmcia-cs软件包。PCMCIA卡是很小的卡片，可以是SCSI卡或是modem。【没有必要】 
　　
　　linuxconf是非常好的系统配置工具。linuxconf提供四种界面供你选择：命令行、文本菜单、X Window的图形界面和基于Web的界面。【没有必要，有bug的程序】 
　　
　　getty_ps软件包包括getty和uugetty两个程序，这两个程序是RedHat Linux系统中实现进程登录的基本程序。getty和uugetty是用于接受控制台或终端的登录请求。【没有必要】 
　　
　　setconsole是基本的系统工具，用在为一个新的控制台创建/etc/inittab、/dev/systty和/dev/console文件。控制台可以是本地的终端（直接通过显示卡连接到系统上）或是通过串口连接的控制台。【没有必要】 
　　
　　ispnptools软件包包括用于配置ISA接口的即插即用（Plug-and-Play）卡，符合PnP ISA Specification 1.0a标准。【没有必要】 
　　
　　kudzu是系统引导的时候运行的硬件探测程序，可以检测到哪些硬件从系统中删除或添加到系统中。【没有必要】 
　　
　　raidtools软件包包括在Linux系统中建立和维护软件RAID（磁盘阵列，用于容错和提高性能，需要两个以上的磁盘）。【取决于你用不用RAID】 
　　
　　GnuPG是GNU的数据通讯和存储的安全工具。它可以用来加密数据和创建数字签名。包括高级的密匙管理工具，而且遵循RFC2440中描述的OpenPGP的国际标准。【我们会在后面的章节介绍如何自己编译】 
　　
　　redhat-logos包括RedHat “Shawdow Man”和RPM的标志图片。【没有必要】 
　　
　　redhat-release是RedHat Linux的发行文件。【没有必要】 
　　
　　gd是处理gif文件的图形函数库。gd可以用于显示图像（线条、弧、文本、多种颜色、从其它图像中剪切和粘贴、填充），并把结果保存为gif文件。【没有必要】 
　　
　　pciutils包括各种各样的工具，用于检测和设置连接到PCI总线上的设备。【我们用其它的方法】 
　　
　　kbdconfig是文本模式的程序，提供了设置键盘映像的一个简单的界面。【没有必要】 
　　
　　mousconfig是基于文本模式的鼠标设置程序。mouseconfig在RedHat Linux系统中，创建配置和使用鼠标所需要的文件和链接。【没有必要】 
　　
　　timeconfig包括：timeconfig和setclock。timeconfig提供了一个简单的文本模式的工具，用来配置/etc/sysconfig/clock和/etc/localtime中的时间参数。【没有必要】 
　　
　　procmail是RedHat Linux用于处理本地邮件发送的程序。除了发送邮件，procmail还可以用于自动过滤、排序和其它处理mail的工作。而且，procmail是SmartList邮件列表程序的基础。【只用在邮件集中服务器上】

#################################
定期使用nmap，nessus扫描，检查安全隐患
隐藏系统和软件的版本号
使用chkroot 
x-force

#########################################################
安全增强工具
安全linux（Secure Linux）
　　安全linux（www.reseau.nl/securelinux）
●Bastille linuxBastille Linux(www.bastille-linux.org）

●Kha0s linuxKha0s
linux（www.kha0s.org）正寻求创建了一个具有强加密和类似OpenBSD的安全政策的最小
的安全linux分发

StackGuardStackGuard是一个十分强大的安全补丁工具

les(Linux Environment Security)

#########################################################
如何找到所有人都可写的（world-writable）文件

要找出所有人都可写的文件，使用此命令：

find / -perm -002 \( -type f -o -type d \) -ls

其中：

    * / 是搜索的起始位置。
    * -perm 检查权限。
    * 002 表示（八进制符号）“other”设置了写位。
    * 模式 002 之前的 - 表示设置了所有权限位（没有考虑模式中的 zero-bits）。
    * -type f 或者 -type d 搜索常规的文件和目录。
    * -ls 以 ls 格式列出找到的文件。

##################################################################
1.前言 

　　网络安全问题总是由于一些漏洞引起的，攻击者抓住这些漏洞，从而获得相应的权限或者找到使服务器瘫痪的攻击手段。如果我们能够事先对这些漏洞进行检测，那么系统就会更加安全可靠。因此，网络安全的漏洞检测是十分必要的。本文介绍如何进行漏洞检测和如何进行修补。

2.检测表

　　一个查看系统安全的方法是通过检测表。安全检测表是计算机安全中存在很久的传统。它们通常包含关于已知的弱点和配置错误的内容。系统管理员检查表中的每一项并和系统进行对比。如果系统与之相符，则该项通过了检测。潜在的漏洞在暴露之前就被修复。一旦所有的项目都被检测通过，则系统管理员宣布该系统是安全的，并投入使用。但是没有一个检测表是完全的。一个检测表有时间上的限制，有可能会过时，新的漏洞可能会产生。下面是一个检测表的例子：

  Root account
  DO restrict the number of people who know the root password. These should 
    be the same users registered with groupid 0(e.g., wheel group on SunOS).
Typically this is limited to at most 3 or 4 people.

  DO NOT log in as root over the network, in accordance with site security policy
  Do su from user accounts rather than logging as root. This provides greater
    accountability.
  Ensure root does not have a ~/.rhosts file
  Ensure “.” Is not in root’s search path
  Ensure root’s login files do not source any other files not owned by root 
    or which are group or world writable
  Ensure root cron job files do not source any other files not owned by root 
    or which are group or world writable
  Do use absolute path names when root. e.g. , /bin/su, /bin/find, /bin/passwd. 
    This is to stop the possibility of root accidentally executing a Trojan
horse. To execute commands in the current directory, root should prefix
the command with “./”, e.g., ./command

3.弱点数据库

　　另一种安全检测的方法是查询安全弱点数据库。它允许用户搜索众所周知的可能影响特定系统的漏洞。可以从这些数据库中找到的项目创建自己的检测表。定期查看供应商的站点来寻找安全补丁。有些产品，像Red Hat Linux, 经常出现补丁。

　　一个强大的弱点数据库是由Internet Security System Inc. 维护的。可以在下面的站点搜索ISS的X-force数据库。

　　http://www.iss.net/cgi-bin/xforce/xforce_index.pl

  4.基于主机的工具

　　人工查阅检测表需要很多时间。有几个工具可以自动实施这一过程。基于已经知道的漏洞，像COPS和Tiger这样的弱点测试程序针对一个检测表来检查系统管理员的行为。它们可以检查下面的项目：

系统配置错误 
不安全的权限设置 
所有用户可写的文件 
SUID和SGID文件 
Crontab条目 
Sendmail和ftp设置 
脆弱的口令或者空口令 
系统文件的改动 
　　第一次运行COPS或者Tiger这样的系统检测工具可能会大开眼界。它们都能产生有关发现的详细报告，暴露各种弱点。任何程序都不能超过其运行的系统的界限。系统检测工具检查该系统，而不是其他主机或网络。

　　不论使用什么工具，用户都应该定期进行安全测试。在下面的情况发生时也要进行测试：

安装了一个新系统 
怀疑受到了攻击 
确定受到了攻击 
　　另外，应该不定期的进行随机测试，以防止攻击者发现了时间安排而进行攻击。

5.解决问题的工具

　　上面的工具只是发现问题，而不解决问题，另一类工具可以发现安全问题并且解决这些问题。例如Titan工具，它检测运行系统，报告发现的问题，要求权限来修复，然后改正问题。

  6.网络安全扫描工具

　　有一类工具使用网络通信信道来搜索其他主机的弱点。例如SATAN和nmap。Nmap工具能够搜索开放的端口，甚至进行操作系统检测。所有这些工具能够为了防御目的或作为攻击的一部分来检测主机。

7.工具简单评价

7.1.chkacct

　　是一个检查用户帐号安全的工具。它检查文件的权限并改正它们。它寻找那些可能被所有用户可读的文件并查看以点号开头的文件。另一方面，这个GNU许可的工具需要一些配置（参见chkacct.src）。要查看更多信息，请看：

  http://www.cs.purdue.edu/coasts/projects/recommendations/tools/chkacct.html

　　下载：

  ftp://coast.cs.purdue.edu/pub/tools/unix/chkacct/

7.2.COPS（推荐）

　　是报告系统的配置错误以及其他信息的工具。

　　下载：

  ftp://coast.cs.purdue.edu/pub/tools/unix/cops/1.04/

7.3.Courtney

　　监测一个网络，查明SATAN探索的结果，并试图识别它们的来源。它从tcpdump获得输入并计算一台机器在一个特定的时段内产生新的服务请求的次数。如果在该时间段内，一台机器和大量的服务连接，Courtney就把该机器识别为一个潜在的SATAN主机。

　　下载：

  ftp://coast.cs.purdue.edu/pub/tools/unix/courtney/

7.4.Internet Security Scanner

　　是一个多层次的安全扫描程序。它将质问特定IP地址范围内的所有计算机，并针对几个常见的系统漏洞来确定每台计算机的安全状况。它依赖公开的CERT和CIAC建议以及其他有关已知安全漏洞的信息。

　　下载：

  ftp://coast.cs.purdue.edu/pub/tools/unix/iss/

7.5.Merlin

　　是一个帮助用户使用其他工具的perl程序。它为COPS1.04，Tiger2.2.3，Crack4.1和Tripwire1.2提供一个Web浏览器界面。Merlin使用一个只接收本地机利用任何一个空闲socket端口发送消息的HTTP服务器来为每一个会话产生一个“magic cookie”值。

　　更多信息：

  http://ciac.llnl.gov/ciac/ToolsMerlin.html

　　下载：

  ftp://ciac.llnl.gov/pub/ciac/sectools/unix/merlin/

7.6.Nessus

　　是一个网络安全扫描工具。它建立一个大量使用“plug-in”的客户－服务器体系结构。它还有一个java客户端。Nessus接收USENET的混合信息。使用新的安全工具，特别是网络扫描程序时，一定要小心。

　　详细请看：

  http://www.nessus.org/

7.7.Nmap

　　是一个端口扫描工具。它能扫描整个网络或一台主机上的开放端口。还可以使用TCP/IP指印来识别一个远程系统运行的是哪种操作系统。

　　详细信息：

  http://www.insecure.org/nmap/index.html

7.8.Titan

　　作为一个安全学习工具，它能够用来主动更正问题，或进行安全审计。它为服务器，防火墙和桌面系统准备了缺省的配置。

　　更多信息：

  http://www.trouble.org/titan/index.html
  http://www.fish.com/titan/

7.9.SATAN(System Administrator’s Tool for Analyzing Networks)（推荐）

　　用来帮助系统管理员检测安全。它也能被基于网络的攻击者用来搜索脆弱的系统。SATAN是为系统和管理员设计的一个安全工具。然而，由于它的广泛性，易用性和扫描远程网络的能力，SATAN也可能因为好奇而被用来定位有弱点的主机。

　　SATAN包括一个有关网络安全问题的检测表，经过网络查找特定的系统或者子网，并报告它的发现。它能搜索以下的弱点：

NFS——由无权限的程序或端口导出 
NIS-——口令文件访问 
Rexd——是否被防火墙阻止 
Sendmail——各种弱点 
ftp——ftp, wu-ftpd或者tftp配置问题 
远程Shell的访问——它是否被禁止或者隐藏 
X windows——主机是否提供无限制的访问 
Modem——经过tcp没有限制拨号访问 
　　报告包括改变配置、安装bug修复工具、限制服务或者禁止服务的建议，以及每个问题的简要描述。程序还有一个“探测模式”能搜索未指明的主机。

　　更多信息：

  http://www.fish.com/~zen/satan/satan.html

　　下载：

  http://www.fish.com/~zen/satan/satan-1.1.1.tar.gz
  ftp://ftp.porcupine.org/pub/security/satan-1.1.1.tar.Z

7.10.Tiger（推荐）

　　是一个检测已知安全问题的灵活工具。

　　下载：

  ftp://coast.cs.purdue.edu/pub/tools/unix/tiger/TAMU/

　　以上工具是常用的漏洞检测工具，读者可以从中选择一部分来测试自己的系统并修补发现的漏洞。 

###################################################################################

作者：大鹰

前言
本文参考sinbad网络安全站的那篇linux安全配置的文章的框架，呵呵，我不太会组织语法（语文差：）
呵呵，这篇文章的目的在于让读者对linux的安全配置有个大概的了解，呵呵，因为我也看过一些关于这方面的文章，说的太空了，呵呵 其实我觉得linux机器要做一般的安全配置的话，分分钟就搞定了，嘿嘿
1，安装
安装的时候，大家都轻车熟路了，呵呵，首先，隔离网络进行系统安装，当然选择custom方式，安装你需要的软件包。
硬盘分区：如果用root分区纪录数据，如log文件和email，就可能因为拒绝服务产生大量日志或垃圾邮件。导致系统崩溃。所以建议为/var开 辟单独的分区，用来存放日志和邮件，以避免root分区被溢出啦，那就惨喽。最好为特殊的应用程序单独开一个分区，特别是可以产生大量日志的程序，还有建议为/home单独分一个区，这样他们就不能填满/分区了，以下是我硬盘上的分区情况：
/　　　root
/var　 log
/hacking　　嘻嘻，我的一些黑软
swap　　 不多说了
/home
当系统安装完重新启动后，最好打上相应系统的安全补丁，请大家养成良好的习惯，记住，你不是在自己家里装98，你装的是一个linux服务器 ，呵呵。对于redhat系统而言可以在：http://www.redhat.com/corp/support/errata/找到补丁。
在redhat6.1以后的版本带有一个工具up2date，它能够测定哪些rpm包需要升级，然后自动从redhat的站点下载并完成安装。
2，关闭服务
呵呵，有句话说的好，要想你的系统绝对安全，就是掐断网线，呵呵，当然我们的机器要对外提供服务，那是不现实的，所以关闭不必要的服 务是必要的，因为有些服务会为您的系统带来麻烦。
默认的linux就是一个强大的系统，运行了很多的服务。但，有许多服务是不需要的，很容易引起安全风险。第一个文件是/etc/inetd.conf，它制定了/usr/sbin/inetd将要监听的服务，你可能只需要其中的两个：telnet和ftp，其他的许多如popd,imapd和rsh都是有可能引发安全问题的。用下面的命令显示没有被注释掉的服务：
suneagle# grep -v "#" /etc/inetd.conf
ftp　　 stream tcp　　 nowait　root　 /usr/sbin/tcpd　in.ftpd -l -a
telnet　stream　tcp　　 nowait root　　/usr/sbin/tcpd　in.telnetd
shell　 stream　tcp　　 nowait　root　　/usr/sbin/tcpd in.rshd
login　 stream　tcp　　 nowait　root　　/usr/sbin/tcpd in.rlogind
talk　　dgram　 udp　　 wait　 nobody.tty　　　/usr/sbin/tcpd in.talkd
ntalk　 dgram　 udp　　 wait　　nobody.tty　　 /usr/sbin/tcpd　in.ntalkd
pop-3　 stream　tcp　　 nowait　root　　/usr/sbin/tcpd　ipop3d
imap　　stream　tcp　　 nowait　root　　/usr/sbin/tcpd　imapd
finger　stream　tcp　　 nowait nobody　/usr/sbin/tcpd　in.fingerd
linuxconf stream tcp wait root /bin/linuxconf linuxconf --http
exec　 stream　tcp　　 nowait　root　　/bin/sh sh -i
哈哈，大家看最后一行，不就被绑了个rootshell么？呵呵，有什么后果？呵呵看看，在远程的一台win2000机器上用如下命令：
E:＼cmd>nc 192.0.0.88 512
bash# id
id
uid=0(root) gid=0(root) groups=0(root)
bash#
知道了吧？嘿嘿，大家注意哦*^_^*
我有写过一篇关于用这个文件绑后门的文章，呵呵，攻击性很强，这个命令可以帮你查出有没有后门，呵呵。
下个要启动的是.rc脚本，它们决定了init进程要启动哪些服务。redhat系统下，这些脚本在/etc/rc.d/rc3.d （如果你的系统以x为默认启动的话，就是/etc/rc.d/rc5.d）。要在启动时禁止某个服务，只需要把大写的S替换为小写的s，同时， redhat也提供一个工具来帮助你关闭服务，输入/usr/sbin/setup，然后选择"system services",就可以定制系统启动时跑哪些服务。另外一个选择是chkconfig命令，很多linux版本的系
统都自带这个工具。脚本名字中的数字是启动的顺序，以大写的K开头的是杀死进程用的。以下是一些主要的服务：
S05apmd　　　笔记本需要
S10xntpd　　 网络时间协议
S11portmap　 运行rpc服务必需
S15sound　　 声卡相关
S15netfs　　 nfs客户端
S20rstatd　　 避免运行r服务，远程用户可以从中获取很多信息
S20rusersd
S20rwhod
S20rwalld
S20bootparamd 无盘工作站
S25squid　　　代理服务
S34yppasswdd　NIS服务器，此服务漏洞很多
S35ypserv　　 NIS服务器，此服务漏洞很多
S35dhcpd　　　dhcp服务
S40atd　　　 和cron很相似的定时运行程序的服务
S45pcmcia　　 pcmcia卡，笔记本
S50snmpd　　 SNMP，远程用户能从中获得许多系统信息
S55named　　　DNS服务
S55routed　　 RIP，没有必要就别运行它
S60lpd　　　　打印服务
S60mars-nwe　 Netware的文件和打印服务
S60nfs　　　 NFS服务器，漏洞极多
S72amd　　　 automount,mount远程用的
S75gated　　 另外一种路由服务，例如OSPF
S80sendmail　邮件服务，如关闭，仍然可以发信，只是不能收信和作中继
S85httpd　　　web服务器
S87ypbind　　 NIS客户端
S90xfs　　　　X font服务器
S95innd　　　 News服务器
Slinuxconf　 这个都熟悉吧，呵呵，通过浏览器远程管理系统用的
用这个命令察看在关闭启动脚本之前有多少服务在运行：
suneagle# ps -eaf|wc -l
54
我的系统有54种服务在运行呢，当你关闭一些服务以后，重新运行以上命令看看少了多少服务。运行的服务越少，系统自然越安全了，嘿嘿。用下面命令察看哪些服务在运行：
suneagle# netstat -na --ip
Active Internet connections (servers and established)
Proto Recv-Q Send-Q Local Address　　　　　 Foreign Address　　　　 State
tcp　　　　0　 136 192.0.0.88:23　　　　　 192.0.0.5:1236　　　　 ESTABLISHED
tcp　　　 0　　　0 192.0.0.88:23　　　　　 192.0.0.8:1113　　　　 ESTABLISHED
tcp　　　 0　　　0 192.0.0.88:139　　　　 192.0.0.8:1112　　　　 ESTABLISHED
tcp　　　 0　　　0 192.0.0.88:1024　　　　 61.153.17.24:23　　　　 ESTABLISHED
tcp　　　 0　　　0 192.0.0.88:23　　　　　 192.0.0.8:1084　　　　 ESTABLISHED
tcp　　　 0　　　0 0.0.0.0:139　　　　　　 0.0.0.0:*　　　　　　　 LISTEN
tcp　　　 0　　　0 0.0.0.0:80　　　　　　 0.0.0.0:*　　　　　　　 LISTEN
tcp　　　 0　　　0 0.0.0.0:25　　　　　　 0.0.0.0:*　　　　　　　 LISTEN
tcp　　　 0　　　0 0.0.0.0:515　　　　　　 0.0.0.0:*　　　　　　　 LISTEN
tcp　　　 0　　　0 0.0.0.0:512　　　　　　 0.0.0.0:*　　　　　　　 LISTEN
tcp　　　 0　　　0 0.0.0.0:98　　　　　　 0.0.0.0:*　　　　　　　 LISTEN
tcp　　　 0　　　0 0.0.0.0:79　　　　　　 0.0.0.0:*　　　　　　　 LISTEN
tcp　　　 0　　　0 0.0.0.0:143　　　　　　 0.0.0.0:*　　　　　　　 LISTEN
tcp　　　 0　　　0 0.0.0.0:110　　　　　　 0.0.0.0:*　　　　　　　 LISTEN
tcp　　　 0　　　0 0.0.0.0:513　　　　　　 0.0.0.0:*　　　　　　　 LISTEN
tcp　　　 0　　　0 0.0.0.0:514　　　　　　 0.0.0.0:*　　　　　　　 LISTEN
tcp　　　 0　　　0 0.0.0.0:23　　　　　　 0.0.0.0:*　　　　　　　 LISTEN
tcp　　　 0　　　0 0.0.0.0:21　　　　　　 0.0.0.0:*　　　　　　　 LISTEN
tcp　　　 0　　　0 0.0.0.0:113　　　　　　 0.0.0.0:*　　　　　　　 LISTEN
tcp　　　 0　　　0 0.0.0.0:111　　　　　　 0.0.0.0:*　　　　　　　 LISTEN
udp　　　 0　　　0 127.0.0.1:1024　　　　 0.0.0.0:*
udp　　　 0　　　0 192.0.0.88:138　　　　 0.0.0.0:*
udp　　　 0　　　0 192.0.0.88:137　　　　 0.0.0.0:*
udp　　　 0　　　0 0.0.0.0:138　　　　　　 0.0.0.0:*
udp　　　 0　　　0 0.0.0.0:137　　　　　　 0.0.0.0:*
udp　　　 0　　　0 0.0.0.0:518　　　　　　 0.0.0.0:*
udp　　　 0　　　0 0.0.0.0:517　　　　　　 0.0.0.0:*
udp　　　 0　　　0 0.0.0.0:111　　　　　　 0.0.0.0:*
raw　　　 0　　　0 0.0.0.0:1　　　　　　　 0.0.0.0:*　　　　　　　 7
raw　　　 0　　　0 0.0.0.0:6　　　　　　　 0.0.0.0:*　　　　　　　 7
呵呵，我这个系统由于测试用，所以故意开了不少危险端口，呵呵，大家别学我哦，该关的就关啦，哈哈。
3，日志纪录和增强
关闭一些不必要的服务以后，日志也是需要我们关心的一块，配置好的unix系统日志非常强大，甚至可以做出陷阱，关于日志，我可以写长篇大论，这里就不很详细讲述日志的原理了，感兴趣的朋友可以参考相关资料或阅读我的另一篇文章《solaris系统日志原理》。好！所有的日志都在/var/log下（仅对linux系统而言），默认情况下linux的日志就很强大了，除了 ftp。但我们可以通过修改/etc/ftpaccess或者/etc/inetd.conf，来保证每一个ftp连接日志都能够纪录下来。下面是一个修改inetd.conf的例子：
ftp　 stream　 tcp　 nowait　 root　 /usr/sbin/tcpd　 in.ftpd -l -L -i -o
-l　每一个ftp连接都写到syslog
-L　纪录用户的每一个命令
-i　文件received,纪录到xferlog
-o　文件transmitted,记录到xferlog
账号的安全问题
删除/etc/passwd&/etc/shadow中的一些系统账号，如mail,news等等。尽量关闭匿名ftp服务，删掉ftp用户。
/etc/ftpusers文件，包含了不能使用ftp的用户列表，root应该在其中。
修改/etc/securetty，去除终端ttyp0-ttyp9，使root只能从console或者使用ssh登陆。/etc/issue，不要让次文件透露系统信息。同时要修改/etc/rc.d/rc/local。SUID程序是非常危险的，这些程序被普通用户以euid=0（即root）的身份执行，只能有少量程序被设置为SUID。用一下命令列出系统的SUID二进制程序：
suneagle# find / -perm -4000 -print
用chmod -s去掉一些不需要程序的suid位。
4，连接服务器
作为系统管理员，需要经常对系统进行关系和上传文件，这些通过通信过程必须要保证是安全的。我介绍两个方法：ssh和tcp wrappers。
其实我比较偏向于用ssh，它把你和防火墙之间的通信全部进行了加密，而tcp wrappers没有做到加密一点，呵呵虽然现在先进的sniffer技术也可以嗅探到ssh的数据包，但它依然还是最安全的。建议用ssh完全取代 telnet/ftp，它能够确保数据在网络中的安全传输。ssh和tcpwrapper都有它们自己的日志纪录，并设有访问控制策略，大家如果要深入了解ssh的话，可以参考想关书籍。
tcpwrappers尽管没有对数据进行加密，但它有日志系统并且可以控制哪些人可以访问你的系统，它在inetd中包装了其他的二进制文件，如 telnet,ftp,finger等等。系统用tcpwrapper进行inetd监听连接，记录了所有请求并且与访问控制列表作比较，如果允许连接， tcpwrapper将调用实际的服务器进程来连接，如in.telnetd服务，如果拒绝，连接将断开。对linux用户比较幸运的是 tcpwrapper已经被默认安装了，我们所要做的就是编辑/etc/hosts.allow和/etc/hosts.deny两个文件，注意以下事项：
1，尽量使用ip
2，首先通过/etc/hosts.deny禁止来自任何地方对所有服务的访问：ALL:ALL
然后在/etc/hosts.allow中添加要授权的机器及服务。冒号左边为服务，冒号右边为授权机器。
5，加固系统
一上的措施足以应付一般的网络攻击，但你的系统不是100%安全的，从来就没有绝对安全的系统，不是么？嘿嘿。我们来进一步加固系统！
编辑/etc/groups，增加wheel组（其实我很喜欢freebsd的地方，就是默认freebsd这些工作做的很好）。这个组包含了一些用户，可以执行/bin/su等强大的命令。对其他用户执行这些命令的控制，可以改善系统的安全。如下命令：
suneagle# /bin/chgrp wheel /bin/su
suneagle# /bin/chmod 4750 /bin/su
然后锁定一些文件：.rhosts,.netrc,/etc/hosts.equiv。r命令可以通过这些文件远程连入你的系统。先touch这些文件，然后chmod至0。
suneagle# /bin/touch /root/.rhosts /root/.netrc /etc/hosts.equiv;/bin/chmod 0 /root/.rhosts /root/.netrc /etc/hosts.equiv
linux还有一个众所周知的命令：chattr，呵呵+i操作，即使是root，也在-i之前改不了它们，先在你的系统的/etc/shadow,/etc/inetd.conf等文件来个chattr +i可以避免一下exploit给你添后门什么的，呵呵。
bash的问题
对于bash用户来讲，有个.bash_history文件，可以记录你的所用的命令，谁也不希望其他人包括root知道自己敲了哪些命令吧？我有两种方法来解决这个问题
1，在自己的.bash_profile文件中加入一行：
HISTFILESIZE=0
记住不要把HISTSIZE置零，那样就无法使用上下健来调用历史命令了。
2，删除自己目录下的.bash_history，然后建立一个连接：
suneagle$ ln -s /dev/null $HOME/.bash_history
这样，大家理解吧？历史命令都掉到黑洞洞里啦~~~~~
最后，保证物理安全，建立在/etc/lilo.conf中设置密码来控制linux的启动，呵呵，虽然也是可以被破解的，嘿嘿，因为它是明文存放，破解方法吗，知者知之，不知者就不知啦，嘿嘿。
ok，写了这么多，大概把安全性讲了一下，算是可一个不错的入门教材。



Linux网络安全设置
Linux的组网能力非常强大，它的TCP/IP代码是最高级的。Linux提供了对于当前的TCP/IP协议的完全支持，并且包括了对下一代Internet协议IPv6的支持。互联网中接入的机器中，有相当大一部分使用的是Linux操作系统。但Linux是一个多用户的系统，黑客们为了在攻击中隐藏自己，往往选择Linux系统作为首先攻击的对象，进而利用它来做一些非法的勾当，如：进行DOS(拒绝服务)攻击、运行IRC bot、发布非法软件等。作为一个Linux用户，时刻要防止攻击，以下十项建议可以使你的Linux系统更加安全。

　　关闭无用的端口

　　任何网络连接都是通过开放的应用端口来实现的。如果我们尽可能少地开放端口，就使网络攻击变成无源之水，从而大大减少了攻击者成功的机会。

　　首先检查你的inetd．conf文件。inetd在某些端口上守侯，准备为你提供必要的服务。如果某人开发出一个特殊的inetd守护程序，这里就存在一个安全隐患。你应当在inetd．conf文件中注释掉那些永不会用到的服务(如：echo、gopher、rsh、rlogin、rexec、talk、ntalk、pop-2、finger等)。注释除非绝对需要，你一定要注释掉rsh、rlogin和rexec，而telnet建议你使用更为安全的ssh来代替，然后杀掉lnetd进程。这样 inetd不再监控你机器上的守护程序，从而杜绝有人利用它来窃取你的应用端口。你最好是下载一个端口扫描程序扫描你的系统，如果发现有你不知道的开放端口，马上找到正使用它的进程，从而判断是否关闭它们。

　　删除不用的软件包

　　在进行系统规划时，总的原则是将不需要的服务一律去掉。默认的Linux就是一个强大的系统，运行了很多的服务。但有许多服务是不需要的，很容易引起安全风险。这个文件就是/etc/inetd.conf，它制定了/usr/sbin/inetd将要监听的服务，你可能只需要其中的两个：telnet和ftp，其它的类如shell、login、exec、talk、ntalk、imap、pop-2、pop-3、finger、auth等，除非你真的想用它，否则统统关闭。

　　需要提醒你的是以下三个服务漏洞很多，强烈建议你关闭它们：S34yppasswdd（NIS服务器）、S35ypserv（NIS服务器）和S60nfs（NFS服务器）。

　　不设置缺省路由

　　在主机中，应该严格禁止设置缺省路由，即default route。建议为每一个子网或网段设置一个路由，否则其它机器就可能通过一定方式访问该主机。

　　口令管理

　　口令的长度一般不要少于8个字符，口令的组成应以无规则的大小写字母、数字和符号相结合，严格避免用英语单词或词组等设置口令，而且各用户的口令应该养成定期更换的习惯。另外，口令的保护还涉及到对/etc/passwd和/etc/shadow文件的保护，必须做到只有系统管理员才能访问这2个文件。安装一个口令过滤工具加npasswd，能帮你检查你的口令是否耐得住攻击。如果你以前没有安装此类的工具，建议你现在马上安装。如果你是系统管理员，你的系统中又没有安装口令过滤工具，请你马上检查所有用户的口令是否能被穷尽搜索到，即对你的／ect／passwd文件实施穷尽搜索攻击。对那些糟糕的口令，强令它们的主人修改它，或干脆锁住它们的账号。

　　分区管理

　　一个潜在的攻击，它首先就会尝试缓冲区溢出。在过去的几年中，以缓冲区溢出为类型的安全漏洞是最为常见的一种形式了。更为严重的是，缓冲区溢出漏洞占了远程网络攻击的绝大多数，这种攻击可以轻易使得一个匿名的Internet用户有机会获得一台主机的部分或全部的控制权！

　　为了防止此类攻击，我们从安装系统时就应该注意。如果用root分区纪录数据，如log文件和email，就可能因为拒绝服务产生大量日志或垃圾邮件，从而导致系统崩溃。所以建议为/var开辟单独的分区，用来存放日志和邮件，以避免root分区被溢出。最好为特殊的应用程序单独开一个分区，特别是可以产生大量日志的程序，还建议为/home单独分一个区，这样他们就不能填满/分区了，从而就避免了部分针对Linux分区溢出的恶意攻击。

　　谨慎使用.rhosts文件

　　.rhosts文件中存储的是可以直接远程访问本系统的主机及用户名。当你用telnet命令或r*命令(如 rlogin、rcp等)来远程访问本系统时，系统首先检查．rhosts文件中是否存有你此时的主机名和用户名。当找到你的主机名和用户名后，它将允许你直接访问它，而不需输入口令。当黑客一旦攻破你的系统，他必将要在你的系统中留下一个供他日后自由出入的后门。只要他将自己的主机名和用户名写进． rhosts文件，就达到了这一目的。

　　所以我们要时刻检查我们的rhosts文件，一旦发现里面出现莫名其妙的主机名和用户名，马上删除它们。并把它们报告给它们的服务提供商，警告他们的行为。

　　日志管理

　　日志文件时刻为你记录着你的系统的运行情况。当黑客光临时，也不能逃脱日志的法眼。所以黑客往往在攻击时修改日志文件，来隐藏踪迹。因此我们要限制对／var／log文件的访问，禁止一般权限的用户去查看日志文件。

　　另外，我们还可以安装一个icmp／tcp日志管理程序，如iplogger，来观察那些可疑的多次的连接尝试(加icmp flood3或一些类似的情况)。还要小心一些来自不明主机的登录。

　　终止正进行的攻击

　　假如你在检查日志文件时，发现了一个用户从你未知的主机登录，而且你确定此用户在这台主机上没有账号，此时你可能正被攻击。首先你要马上锁住此账号 (在口令文件或shadow文件中，此用户的口令前加一个Ib或其他的字符)。若攻击者已经连接到系统，你应马上断开主机与网络的物理连接。如有可能，你还要进一步查看此用户的历史记录，查看其他用户是否也被假冒，攻击音是否拥有根权限。杀掉此用户的所有进程并把此主机的ip地址掩码加到文件 hosts.deny中。

　　防范身边的攻击

　　如果你的身边躲藏有攻击的人，要做到对他们的防范难上加难。因为他们甚至可以用如下方法获得你的根权限：攻击者首先用引导磁盘来启动系统，然后mount你的硬盘，改掉根口令，再重启动机器。此时攻击者拥有了根口令，而作为管理员的你却被拒之门外。要避免此类情况的发生，最简单的方法是改变机器中BIOS的配置，使机器的启动顺序改为硬盘第一序，并为你的BIOS设置一个口令。

　　补丁问题

　　你应该经常到你所安装的Linux系统发行商的主页上去找最新的补丁。例如：对于Redhat系统而言，可以在：http://www.redhat.com/corp/support/errata/上找到补丁。在Redhat6.1以后的版本带有一个自动升级工具up2date，它能自动测定哪些rpm包需要升级，然后自动从Redhat的站点下载并完成安装。


Linux安全配置
安全性是一个复杂和广泛的问题，此处我们主要关注Linux用户的账户安全，特别是Linux系统管理员如何保障用户的安全。


口令安全


Linux系统中的／etc／passwd文件含有全部系统需要知道的每个用户的信息(加密口令的密文也可能存于／etc／shadow文件中)。／etc／passwd中包含有用户的登录名、经过加密的口令、用户号、用户组号、用户注释、用户主目录和用户所用的Shell程序。其中，用户号（UID）和用户组号（GID）用于Linux系统惟一标识用户和同组用户，以及用户的访问权限。一个好的口令应当至少有6个字符，最好不要取用个人信息（如生日、名字、反向拼写的登录名），普通的英语单词也不好（因为用字典攻击法容易破解）。口令最好含有一些非字母字符（如数字、标点符号、控制字符等），并且要好记，不能写在纸上或计算机中的文件里。选择口令的一个好方法是将两个不相关的词用一个数字或控制字符相连，并截断为8个字符。当然，如果你能记住8位乱码自然更好。不应在不同机器中使用同一个口令，特别是在不同级别的用户上使用同一口令。不要将口令存储于终端功能键或Modem的字符串存储器中。用户应定期改变口令，推荐3个月改变一次。系统管理员可以强制用户定期修改口令。为防止眼明手快的人得到口令，在输入口令时应确认身边无人。


文件和文件夹的安全


umask设置用户文件和目录的文件创建缺省屏蔽值，若将此命令放入.profile文件就可控制该用户后续所建文件的存取许可。umask命令与chmod命令的作用正好相反，它告诉系统在创建文件时不给予存取许可。

1．不要让文件或目录被他人读写。

如果不信任本组用户，umask设置为022。确保自己的.profile他人不可读写；暂存目录最好不要存放重要文件；home目录任何人不可写； uucp传输的文件应该加密，并尽快转移到自己的目录中。

2．若不想要其他用户读文件或目录，就要使其不允许任何人读。

umask设置为006／007。若不允许同组用户存取自己的文件和目录，umask设置为077；暂存文件按当前umask设置。存放重要数据到暂存文件的程序，就被写成能确保暂存文件其他用户不可读。这样，就可确保别的用户不可读home目录。


拷贝和移动文件的安全


用cp命令拷贝文件时，若目的文件不存在，则将同时拷贝源文件的存取许可，包括Suid和Sgid许可。新拷贝的文件属拷贝用户所有，故拷贝别人的文件时应小心，不要被其他用户的Suid程序破坏文件安全。

用mv命令移动文件时，新移的文件存取许可与原文件相同，mv仅改变文件名。只要用户有目录的写和搜索许可，就可移走该目录中某人的Suid程序，且不改变存取许可。若目录许可设置不正确，则用户的Suid程序可能被移到不能修改和删除的目录中，从而出现安全漏洞。

cpio命令用于将目录结构拷贝到一个普通文件中，然后再用cpio命令将该普通文件转成目录结构。小心使用该命令，因为它能覆盖不在当前目录结构中的文件，用t选项可首先列出要被拷贝的文件。


不要离开登录的终端


这个问题看起来简单，但却是最容易忽视的问题，哪怕只是几分钟的疏忽，也会给系统造成危害。


文件加密的安全


crypt命令可提供给用户加密文件。它使用一个关键词将标准输入的信息编码变为不可读的杂乱字符串，送到标准输出设备。再次使用该命令，用同一关键词作用于加密后的文件，可恢复文件内容。

一般来说，文件加密后应删除原始文件，只留下加密后的版本，且不能忘记加密关键词。vi命令一般都有加密功能，用vi -x命令可编辑加密后的文件。加密关键词的选取规则与口令的选取规则相同。

由于crypt程序可能被做成特洛伊木马，故不宜用口令做为关键词。最好在加密前用pack或compress命令对文件进行压缩，然后再加密。


CU的问题


CU命令能使用户从一个Linux系统登录到另一个Linux系统。此时，在远地系统还必须输入“～”后回车，以断开CU和远地系统的连接。

CU也有安全问题。如果本机安全性弱于远地机，不提倡用CU去登录远地机，以免由于本地机不安全而影响较安全的远地机。由于CU的老版本处理“～”的方法不完善，从安全性强的系统调用，会使安全性弱的系统的用户使用强系统用户的CU，传送强系统的／etc／passwd文件。


暂存文件和目录的安全


Linux系统中暂存目录为／tmp和／usr／tmp，如果用这些目录存放暂存文件，别的用户可能会破坏这些文件。使用暂存文件最好将文件屏蔽值定义为007。保险的方法是建立自己的暂存文件和目录$Home／Mp，不要将重要文件存放于公共的暂存目录。


UUCP文件传输和网络安全


UUCP命令用于将文件从一个Linux系统传送到另一个Linux系统。通过UUCP传送的文件，通常存于／usr／spool／uucppublic/login目录中，Login是用户的登录名，该目录存取许可为777。通过网络传输并存放于此目录的文件属于UUCP所有，文件存取许可为666和777。用户应当将通过UUCP传送的文件加密，并尽快移到自己的目录中。其它网络将文件传送到用户home目录下的RJC目录中。该目录对其他人是可写、可搜索的，但不一定是可读的，因而用户的RJC目录的存取许可方式应为733，允许程序在其中建立文件。同样，传送的文件也应加密并尽快移到自己的目录中。


Suid/Sgid的安全


尽量不写Suid/Sgid程序。in为现有文件建立一个链，即建立一个引用同一文件的新名字。如目的文件已经存在，则该文件被删除而代之以新的链；或存在的目的文件不允许用户写，则请求用户确认是否删除该文件，因为只允许在同一文件系统内建链。若要删除一个Suid文件，就要确认文件的链接数，只有一个链才能确保该文件被删除。若Suid文件已有多个链，一种方法是改变其存取许可方式，这将同时修改所有链的存取许可；也可以Chmod000文件名，这不仅取消了文件的Suid和Sgid许可，同时也取消了文件的全部链。要想找到谁与自己Suid程序建立了链，不要立刻删除该程序，系统管理员可用 Ncheck命令找到该程序的其他链。


智能终端的安全


由于智能终端有Send Enter换码序列，因此告诉终端当前系统就像是用户敲入的一样。这是一种危险的能力，其他人可用Write命令发送信息给本用户终端。禁止其他用户发送信息的方法是使用Mesgn命令。Mesgn不允许其他用户发信息，Mesgy允许其他用户发信息。即使如此仍有换码序列的问题存在，任何一个用户用Mail命令发送同样一组换码序列，不同的要用！rm-r*替换rm-r*。


其他安全问题


除了信任的用户外，不要运行其他用户的程序。在自己的Path中，将系统目录放在前面。用Ctrl＋D或Exit退出后，在断开与系统的连接前看到 login:提示后再离开，以免在用户没注销时他人进入。定时使用ls -a .命令列出当前目录中的全部文件，包括以“．”开头的文件，查看所有文件的存取许可方式和所有者。任何不属于自己的文件都应怀疑和追究。

以上这些是我作为Linux系统管理员对保持用户账户安全的一些建议。更重要的是要建立安全意识，了解用户。系统管理员越熟悉自己的用户和用户工作习惯，就越能快速发现不寻常的事件，而不寻常的事件就意味着系统安全问题。避免用户账户不安全事故的最基本方法是预防和定期的安全检查，包括使用嗅探器。


安全syslog即使使用单独的登录服务器，linux自身的syslog工具也是相当不安全
的。因此，有人开发了所谓的安全log服务器，将密码签名集成到日志中。这会确保入侵
者即使在窜改系统日志以后也无法做到不被发现。现在最常用的用于取代syslog的安全
log服务器称为"安全syslog（ssyslong）"，用户可以从Core SDI站点http://www.core
-sdi.com/ssylog处下载这个工具。这个守护程序实现一个称为PEQ-1的密码协议来实现
对系统日志的远程审计。即使在入侵者获得系统超级用户权限的情况下也仍然可以进行
审计，因为协议保证了以前以及入侵过程中的的log信息没有审计者（在远程可信任的主
机上）的通知无法被修改。
　　●syslog-ng另一个取代syslog的工具是syslog-ng（下一代的syslog）。这是一个
更加可配置的守护进程，它提供了密码签名来检测对日志文件的窜改。密码安全登录服
务器和远程审计功能一起可以使入侵者极难进行日志窜改并且非常容易被检测到这样的
不良企图。用户可以从www.babit.hu/products/syslog-ng.html处下载这个工具。


1 Sxid
sxid 是一个系统监控程序。它可以监视系统中 suid，sgid 文件以及没有属主的变化。并且以可选的形式报告这些改变，你可以在配置文件中设置用 email 的形式通知这些改变，也可以不使用 email 而直接在标准输出上显示这些变化。Suid，sgid 文件以及没有属主的文件很有可能是别人放置的后门程序，这些都是您所要特别注意的。
如果您安装过其他工具，那么您一定也会安装这个工具，它在安装上没有什么特别的地方。
缺 省安装的时候，配置文件为 /usr/local/etc/sxid.conf，这个文件中有很明显的注释很容易看懂。在这个文件中定义了 sxid 的工作方式。日志文件缺省为 /var/log/sxid.log，日志文件的循环次数在 sxid.conf 文件中定义。您可以在配置固定后把 sxid.conf 设置为不可改变，把 sxid.log 设置为只可添加（使用 chattr 命令）。
您可以用 sxid -k 加上 -k 选项来进行检查，这时检查很灵活，既不记入日志，也不会发出 email。这样您就可以随时做检查。 但是我还是建议您把检查放入 crontab 中，使用 crontab -e 编辑加入下面的条目：
        0 4 * * * /usr/bin/sxid
    

表示每天上午 4 点执行这个程序。
如果您还想了解更详细的信息，可以参考：
man  sxid
man  5  sxid.conf





2 Skey
您认为您的密码安全吗？即使您的密码很长，有很多特殊字符，解密工具很难破解，但您的密码在网络中传送时是以明文形式的，在以太网中随便一个嗅探器就可以截取您的密码。现在在交换环境中也能实现这种技术。在这种情况下，skey 对您来说是一个选择。
Skey 是一次性口令的一个工具。它是一个基于客户\服务器的应用程序。首先在服务器端可以用 keyinit 命令为每个用户建立一个 skey 客户，这个命令需要指定一个秘密口令，然后就可以为客户端的用户产生一次性口令列表。当用户通过 telnet，ftp 等与服务器进行连接时就可以按照一次性口令列表中的口令顺序输入自己的密码，下次再连接时候密码就换成了列表中的下一个。
skey 的服务器端使用有下面的步骤：
1 使用下面的命令初始化用户 mary:
keyinit mary 
keyinit 每次为用户生成 99 个一次性口令，这时就会在 /etc/skeykeys 文件 
建立这个用户，该文件中保存了服务器端计算下一个一次性口令的一些信息。用上面的 keyinit 命令时就会在 /etc/skeykeys 中有下面的记录： 
mary  0099  to25065  be9406d891ac86fb  Mar  11, 2001 04:23:12

上面的记录中从左到右依次是用户名，要使用的一次性口令序号，口令的种类，16 进制表示的口令，日期和时间。
2 将一次性口令列表提供给 mary 
您可以打印出口令列表然后送给 mary。这样比较安全，密码不会在网络中传递。 
3 为 mary 修改缺省的登陆 shell 为 /usr/local/bin/keysh 
由于 PAM 的作用，mary 登陆时要输入密码，她输入这个一次性口令后服务器端要对这个口令进行校验，校验通过连接就被许可了。 
可能有些用户不喜欢书面的口令列表，用户可以使用 key 命令在自己的客户端得到一次性口令。您可以通过开两个窗口，一个对服务器进行连接获得一次性口令的种类和序号，然后在另一个窗口用 key 命令根据口令的种类和序号获得所要的密码。但是必须提醒您，您这样的方便是以一定的危险性为代价的。 
如果您的缺省的 99 个口令用完了，您可以使用 keyinit -s 刷新口令列表。 
在 /usr/src/skey/misc 目录中有许多其他的替换 keysh 的提供其他服务的程序，例如：su,login,ftp 等等。这样您可以应付不同的服务的连接请求了。 
为了安全，您最好设置一下/etc/skeykeys 文件的属性和权限。 

你可以禁用代码编译并且只把编译的权限分配给一个用户组
#该组的成员可以编译代码
/usr/sbin/groupadd compiler
#把常见的编译器所属组赋给编译用户组
chgrp compiler /usr/bin/*cc*  
chgrp compiler /usr/bin/*++*
chgrp compiler /usr/bin/ld
chgrp compiler /usr/bin/as
#设置mysqlaccess的 访问
chgrp root mysqlaccess
#设置权限
chmod 750 /usr/bin/*cc*
chmod 750 /usr/bin/*++*
chmod 750 /usr/bin/ld
chmod 750 /usr/bin/as
chmod 755 /usr/bin/mysqlaccess
#把用户添加到组里
vi /etc/group
compiler:x:520:user1,user2


8、root通知
当一个具有root权限的用户登录的时候发mail，具体实施方法如下：
vi /root/.bashrc ，当有root权限的用户登录时发生email通知
echo ‘ALERT – Root Shell Access (Server Name) on:’ `date` `who` | mail -s “Alert: Root Access from `who | cut -d”(” -f2 | cut -d”)” -f1`” your@email.com

9、history安全
这是一个避免删除.bash_history或重定向到/dev/null的好主意，因此他不能清除或删除他最后执行的命令
chattr +a .bash_history
chattr +i .bash_history
获取用户的人会知道他的历史命令锁定并且要同意才可以使用服务



23、禁用危险的php函数
你应该禁用php的危险函数防止在网站上执行系统命令whereis php.ini
vi /usr/local/lib/php.ini
disable_functions = “symlink,shell_exec,exec,proc_close,proc_open,popen,
system,dl,passthru,escapeshellarg, escapeshellcmd”

24、安装配置防火墙
高级策略防火墙（APF）是一种IP表（网络过滤），它是基于当今互联网部署服务器防火墙系统的基本需要和客户部署LINUX安装的唯一需要而设计的。 它是最好的开源防火墙之一
1）配置APF防火墙方法：
wget http://www.r-fx.ca/downloads/apf-current.tar.gz
tar -zxvf apf-current.tar.gz
cd apf-0.9.7-1
./install.sh

2）vi /etc/apf/conf.apf，一般配置如下
启用防火墙使用DShield.org块列表
USE_DS=”1″
然后我将列出常规的配置和CPanel配置方式，因为CPanel是应该最广泛的虚拟主机管理软件

（1）常规配置(DNS,Mail,Web,FTP)

Common ingress (inbound)
# Common ingress (inbound) TCP ports -3000_3500 = passive port range for Pure FTPD IG_TCP_CPORTS=”21,22,25,53,80,110,143,443,995″
# Common ingress (inbound) UDP ports IG_UDP_CPORTS=”53″
# Egress filtering [0 = Disabled / 1 = Enabled]
EGF=”1″
# Common egress (outbound) TCP ports
EG_TCP_CPORTS=”21,25,80,443,43″
# Common egress (outbound) UDP ports
EG_UDP_CPORTS=”20,21,53″

（2）CPanel配置
Common ingress (inbound) ports
# Common ingress (inbound) TCP ports -3000_3500 = passive port range for Pure FTPD IG_TCP_CPORTS=”21,22,25,53,80,110,143,443,2082,2083, 2086,2087,2095, 2096,3000_3500″
# Common ingress (inbound) UDP ports
IG_UDP_CPORTS=”53″
Common egress (outbound) ports
# Egress filtering [0 = Disabled / 1 = Enabled]
EGF=”1″
# Common egress (outbound) TCP ports
EG_TCP_CPORTS=”21,25,80,443,43,2089″
# Common egress (outbound) UDP ports
EG_UDP_CPORTS=”20,21,53″
之后启动防火墙：/etc/apf/apf -s，如果运行良好我在回去修改配置文件，使DEVM=”0″

（3）配置APF的AntiDos
vi /etc/apf/ad/conf.antidos，找到下面的内容并替换成你的资料
# Organization name to display on outgoing alert emails
CONAME=”Your Company”
# Send out user defined attack alerts [0=off,1=on]
USR_ALERT=”0″
# User for alerts to be mailed to
USR=you@yourco.com
你应把USR_ALERT改为1
保存后重启APF：/etc/apf/apf –r

To make the firewall start with the Operating System: chkconfig –level 2345 apf on
APF开机自启动：chkconfig –level 2345 apf on
禁止一个IP用/etc/apf/apf -d ip或vi /etc/apf/deny_hosts.rules
允许一个IP用/etc/apf/apf -a ip或vi /etc/apf/deny_hosts.rules


12、chmod危险文件
这可能是限制不具有root权限的用户执行下面这些命令的好主意
chmod 700 /bin/ping
chmod 700 /usr/bin/finger
chmod 700 /usr/bin/who
chmod 700 /usr/bin/w
chmod 700 /usr/bin/locate
chmod 700 /usr/bin/whereis
chmod 700 /sbin/ifconfig
chmod 700 /usr/bin/pico
chmod 700 /usr/bin/vi
chmod 700 /usr/bin/which
chmod 700 /usr/bin/gcc
chmod 700 /usr/bin/make
chmod 700 /bin/rpm


25、安装配置BFD（暴力破解检测）
BFD是一个用于分析应用日志和检测验证失败的模块化shell脚本，而且安装配置和用法都是非常容易的。使用BFD的原因很简单，其实在LINUX领域几乎没有结合防火墙或实时设备来监控不验证和暴力攻击审计的程序。在用BFD之前你必须安装APF防火墙
wget http://www.r-fx.ca/downloads/bfd-current.tar.gz
tar -zxvf bfd-current.tar.gz
cd bfd-0.9

vi /usr/local/bfd/conf.bfd
#把以下内容改为你的资料

# Enable/disable user alerts [0 = off; 1 = on]
ALERT_USR=”1″
# User alert email address
EMAIL_USR=”your@mail.com”
# User alert email; subject
SUBJ_USR=”Brute Force Warning for $HOSTNAME”
vi /usr/local/bfd/ignore.hosts，然后把你的IP设置成允许主机，避免意外的锁定自己
#重启BFD
/usr/local/sbin/bfd -s


sysctl.conf用来加固内核，目的是避免DOS和欺骗攻击，具体的方法如下：
#了解下当前配置的大概情况
sysctl -a
vi /etc/sysctl.conf
添加如下内容：

# Kernel sysctl configuration file for Red Hat Linux
# For binary values, 0 is disabled, 1 is enabled. See sysctl(8) and
# sysctl.conf(5) for more details.
# Controls IP packet forwarding
net.ipv4.ip_forward = 0
# Controls source route verification
net.ipv4.conf.default.rp_filter = 1
# Controls the System Request debugging functionality of the kernel
kernel.sysrq = 0
# Controls whether core dumps will append the PID to the core filename.
# Useful for debugging multi-threaded applications.
kernel.core_uses_pid = 1
#Prevent SYN attack
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_max_syn_backlog = 2048
net.ipv4.tcp_synack_retries = 2
# Disables packet forwarding
net.ipv4.ip_forward=0
# Disables IP source routing
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.lo.accept_source_route = 0
net.ipv4.conf.eth0.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0
# Enable IP spoofing protection, turn on source route verification
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.lo.rp_filter = 1
net.ipv4.conf.eth0.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1
# Disable ICMP Redirect Acceptance
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.lo.accept_redirects = 0
net.ipv4.conf.eth0.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
# Enable Log Spoofed Packets, Source Routed Packets, Redirect Packets
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.lo.log_martians = 1
net.ipv4.conf.eth0.log_martians = 1
# Disables IP source routing
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.lo.accept_source_route = 0
net.ipv4.conf.eth0.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0
# Enable IP spoofing protection, turn on source route verification
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.lo.rp_filter = 1
net.ipv4.conf.eth0.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1
# Disable ICMP Redirect Acceptance
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.lo.accept_redirects = 0
net.ipv4.conf.eth0.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
# Disables the magic-sysrq key
kernel.sysrq = 0
# Modify system limits for Ensim WEBppliance
fs.file-max = 65000
# Decrease the time default value for tcp_fin_timeout connection
net.ipv4.tcp_fin_timeout = 15
# Decrease the time default value for tcp_keepalive_time connection
net.ipv4.tcp_keepalive_time = 1800
# Turn off the tcp_window_scaling
net.ipv4.tcp_window_scaling = 0
# Turn off the tcp_sack
net.ipv4.tcp_sack = 0
# Turn off the tcp_timestamps
net.ipv4.tcp_timestamps = 0
# Enable TCP SYN Cookie Protection
net.ipv4.tcp_syncookies = 1
# Enable ignoring broadcasts request
net.ipv4.icmp_echo_ignore_broadcasts = 1
# Enable bad error message Protection
net.ipv4.icmp_ignore_bogus_error_responses = 1
# Log Spoofed Packets, Source Routed Packets, Redirect Packets
net.ipv4.conf.all.log_martians = 1
# Set maximum amount of memory allocated to shm to 256MB
kernel.shmmax = 268435456
# Improve file system performance
vm.bdflush = 100 1200 128 512 15 5000 500 1884 2
# Improve virtual memory performance
vm.buffermem = 90 10 60
# Increases the size of the socket queue (effectively, q0).
net.ipv4.tcp_max_syn_backlog = 1024
# Increase the maximum total TCP buffer-space allocatable
net.ipv4.tcp_mem = 57344 57344 65536
# Increase the maximum TCP write-buffer-space allocatable
net.ipv4.tcp_wmem = 32768 65536 524288
# Increase the maximum TCP read-buffer space allocatable
net.ipv4.tcp_rmem = 98304 196608 1572864
# Increase the maximum and default receive socket buffer size
net.core.rmem_max = 524280
net.core.rmem_default = 524280
# Increase the maximum and default send socket buffer size
net.core.wmem_max = 524280
net.core.wmem_default = 524280
# Increase the tcp-time-wait buckets pool size
net.ipv4.tcp_max_tw_buckets = 1440000
# Allowed local port range
net.ipv4.ip_local_port_range = 16384 65536
# Increase the maximum memory used to reassemble IP fragments
net.ipv4.ipfrag_high_thresh = 512000
net.ipv4.ipfrag_low_thresh = 446464
# Increase the maximum amount of option memory buffers
net.core.optmem_max = 57344
# Increase the maximum number of skb-heads to be cached
net.core.hot_list_length = 1024
## DO NOT REMOVE THE FOLLOWING LINE!
## nsobuild:20051206
#重启后生效
/sbin/sysctl -p
sysctl -w net.ipv4.route.flush=1

27、更改SSH端口
更改SSH默认端口号在一定程度上可以提高安全性
vi /etc/ssh/sshd_config
Port 22改为其他端口
当然不要忘记把更改的端口加进防火墙，然后重启生效：/etc/init.d/ssh restart，如果安装了APF并把端口添加之后，还要重启APF:/etc/init.d/apf restart


28、/tmp,/var/tmp,/dev/shm分区的安全
/tmp,/var/tmp,/dev/shm目录是不安全的，任何用户都可以执行脚本，最好的解决办法是挂载nocexec和nosuid选项的参数（注意：不建议在CPanel使用）

1）/tmp目录
cd /dev
#创建 100M (“count”) 的存储文件:
dd if=/dev/zero of=tmpMnt bs=1024 count=100000
#设为一个扩展的文件系统
/sbin/mke2fs /dev/tmpMnt (“…is not a block special device. continue?”回答yes)
#备份现有临时文件
cp -R /tmp/ /tmp_backup
#用noexec挂载新文件系统:
mount -o loop,rw,nosuid,noexec /dev/tmpMnt /tmp
chmod 0777 /tmp
#把备份的文件拷贝回去
cp -R /tmp_backup/* /tmp/
#删除备份
rm -rf /tmp_backup
#修改/etc/fstab 添加下面的条目使其在引导时仍然有效
/dev/tmpMnt /tmp ext2 loop,rw,nosuid,noexec 0 0

2）/var/tmp目录
mv /var/tmp /var/tmpbak
ln -s /tmp /var/tmp
cp /var/tmpbak/* /tmp/

3）/dev/shm目录
vi  /etc/fstab
"none /dev/shm tmpfs defaults,rw 0 0"  改为  "none /dev/shm tmpfs defaults,nosuid,noexec,rw 0 0"




